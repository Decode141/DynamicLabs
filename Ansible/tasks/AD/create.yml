- set_fact:
    AD_Forest: "{{ AD_Forest | default({}) | combine({item.name: item.value}) }}"
  with_items:
    - "{{ attributes_dict.AD_Forest }}"
- win_hostname:
    name: "{{ custom_hostname }}"
  when: ansible_os_family == "Windows"
  register: system
- win_reboot:
    post_reboot_delay: 60
    reboot_timeout: 900
  when: system.reboot_required
- name: Installing AD Domain Services & creating new Windows forest
  win_feature:
    name: AD-Domain-Services
    include_management_tools: yes
    include_sub_features: yes
    state: present
  register: win_feature
  until: win_feature is not failed
  retries: 10
  delay: 30
- win_domain:
    database_path: C:\Windows\NTDS
    dns_domain_name: "{{ AD_Forest.domain_name }}"
    domain_netbios_name: "{{ AD_Forest.domain_netbios_name }}"
    safe_mode_password: TnUBqUJP62vpBqps4aXWwKZndg4DAg8GvKwYUD6TWg
    sysvol_path: C:\Windows\SYSVOL
  register: domain
- name: Restarting and testing domain availability (Estimated ~10 mins).
  win_reboot:
    post_reboot_delay: 60
    reboot_timeout: 900
  when: domain.reboot_required
- win_command: "nltest /dsgetdc:"
  register: command_result
  until: command_result.rc == 0
  retries: 180
  delay: 10
- win_shell: "if ((Get-KdsRootKey).Length -Eq 0) { Add-KdsRootKey â€“EffectiveTime ((get-date).addhours(-10)) }"
- set_fact:
    ansible_winrm_transport: ntlm
    ansible_domain: "{{ AD_Forest.domain_name }}"
    ansible_user: "{{ ansible_user }}"
    ansible_password: "{{ ansible_password }}"
- win_feature:
    name: Windows-Defender
    state: absent
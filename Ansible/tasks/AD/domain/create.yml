---
# 
# Creates a new Active Directory domain in an existing forest, promoting the system to domain controller for the new domain
# 
# Parameters:
# domain_parent_name = the fully qualified dns name of the parent domain, e.g. dynamic.lab
# domain_dns_server = the IP address of the DNS server for the parent domain. Usally this is the domain controller created with AD_Forest/AD_Domain
# domain_name = subdomain part of the dns name for the domain to be created, e.g. alfa (this will also be the NetBIOS name)
# domain_type = relationship with the parent domain name. Usually ChildDomain
#
# Notes:
# Systems with the AD_Forest feature should always have a static IP assigned.
# 
# Examples:
#            {
#                name = "AD_Domain"
#                value = [
#                    {name = "domain_parent_name", value = "dynamic.lab"},
#                    {name = "domain_dns_server", value = "10.1.1.10"},
#                    {name = "domain_name", value = "alfa"},
#                    {name = "domain_type", value = "ChildDomain"}
#                ]
#            }
#

- set_fact:
    AD_Domain: "{{ AD_Domain | default({}) | combine({item.name: item.value}) }}"
  with_items:
    - "{{ attributes_dict.AD_Domain }}"
- win_hostname:
    name: "{{ custom_hostname }}"
  when: ansible_os_family == "Windows"
  register: system
- win_reboot:
    post_reboot_delay: 60
    reboot_timeout: 900
  when: system.reboot_required
- name: Set look-up address
  win_dns_client:
    adapter_names: '*'
    ipv4_addresses:
    - "{{ AD_Domain.domain_dns_server }}"
    log_path: C:\dns_log.txt
- win_feature:
    name: RSAT-AD-PowerShell
- win_feature:
    name: AD-Domain-Services
    include_management_tools: yes
    include_sub_features: yes
    state: present
  register: win_feature
  until: win_feature is not failed
  retries: 10
  delay: 30
- win_command: "nltest /dsgetdc:{{ AD_Domain.domain_name }}"
  register: command_result
  ignore_errors: yes
- win_shell: |
    $password = ConvertTo-SecureString "{{ansible_password}}" -AsPlainText -Force
    $cred = New-Object System.Management.Automation.PSCredential("{{ AD_Domain.domain_parent_name }}\{{ ansible_user }}", $password)
    $SafeModeAdministratorPassword = ConvertTo-SecureString "TnUBqUJP62vpBqps4aXWwKZndg4DAg8GvKwYUD6TWg" -AsPlainText -Force
    Install-ADDSDomain -Credential $cred -NewDomainName {{ AD_Domain.domain_name }} -ParentDomainName {{ AD_Domain.domain_parent_name }} -DomainType {{ AD_Domain.domain_type }} -InstallDNS -CreateDNSDelegation -SafeModeAdministratorPassword $SafeModeAdministratorPassword -Force
  when: command_result.rc != 0
  register: dcpromo
- name: Restarting and testing domain availability (Estimated 10 mins).
  wait_for_connection:
    delay: 90
  when: dcpromo.changed
- set_fact:
    ansible_winrm_transport: ntlm
    ansible_domain: ""
    ansible_user: "{{ ansible_user }}"
    ansible_password: "{{ ansible_password }}"
- win_command: "nltest /dsgetdc:"
  register: command_result
  until: command_result.rc == 0
  retries: 180
  delay: 10
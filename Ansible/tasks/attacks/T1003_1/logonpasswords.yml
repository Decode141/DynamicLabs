---
# T1003.001 - OS Credential Dumping: LSASS Memory
# Makes user credentials available in memory by executing a session on the box
# Warning: A machine reboot clears the status of the user!
#
# Parameters:
# user - username to impersonate e.g. DYNAMIC\AUser
# password - password of the user (user and password need to be valid)
# process - process to execute and use as a session check. Default is notepad.exe. 
#           Don't set it to calc.exe (or similar) that spawns a process named win32calc.exe in modern Windows systems
#           This will break the checks and result in execution of at every ansible run
# enable_wdigest - 0|1 - Toggle wdigest. If set to 1 the clear-text password of the user will be stored in memory
#           By default modern versions of windows have wdigest disabled.
#           Wdigest affects the whole server configuration
#
# Example:
#             # Store in memory credentials for user DYNAMIC\some.user
#             { 
#                name = "ATTCK_T1003_1"
#                value = [
#                    {
#                        user = "DYNAMIC\\some.user",
#                        password = "Password123"
#                    }
#                ]
#            }
#             # Store in memory clear-text credentials for user DYNAMIC\someother.user
#             { 
#                name = "ATTCK_T1003_1"
#                value = [
#                    {
#                        user = "DYNAMIC\\someother.user",
#                        password = "Password123",
#                        enable_wdigest = 1
#                    }
#                ]
#            }
# 
#
- name: Toggle WDigest
  win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest
    name: UseLogonCredential
    data: "{{ item.enable_wdigest }}"
    type: dword
  when: item.enable_wdigest is defined

- name: Run interactive session for user
  win_shell: |
    $processes = gwmi win32_process -filter "name = ""{{ item.process | default('notepad.exe') }}"""
    # Count relevant processes owned by the user
    $owned_processes_count = ($processes | ? { ($_.GetOwner().Domain + [char]92 + $_.GetOwner().User) -eq "{{ item.user }}" } | measure).count 
    if ($owned_processes_count -eq 0) {
      Write-Host "Starting process {{ item.process | default('notepad.exe')}} as user {{ item.user }}"
      Start-Process {{ item.process | default('notepad.exe') }}
    } else {
      Write-Host "Process {{ item.process | default('notepad.exe')}} as user {{ item.user }} is already running."
    }
  vars:
    ansible_become: yes
    ansible_become_method: runas
    ansible_become_user: "{{ item.user }}"
    ansible_become_password: "{{ item.password }}"
    ansible_become_flags: logon_type=interactive logon_flags=with_profile
  # Do not wait for process termination
  # Note command output is not shown in Ansible's output. Remove when debugging.
  async: 45
  poll: 0
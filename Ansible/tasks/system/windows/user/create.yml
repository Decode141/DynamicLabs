---
# Create local user
#
# Parameters:
# name = user name (required)
# passowrd = user password. Autogenerated if not specified.
# enabled = yes (default), no
# 
# Example:
#            {
#                name = "Win_User"
#                value = [
#                    {name = "LocalUser1"}, # Local user with random password
#                    {name = "LocalUser2"}, # Local user disabled
#                    {name = "LocalUser3", password = "Welcome123!!", full_name = "Such and such"} # Local user with password and fullname
#                  ]
#            }
# Legacy DEPRECATED syntax:
#   {name = "username", value = "LocalUser"},

# Save the user password 

- set_fact:
    user_password: "{{ item.password }}"
  when: item.password is defined

- local_action:
    module: file
    path: "{{ '~/credentials/local/' + custom_hostname }}"
    state: directory
  when: (item.enabled | default('yes')) == 'yes' and item.password is defined

- local_action:
    module: copy
    dest: "{{ '~/credentials/local/' + custom_hostname + '/' + item.name }}"
    content: "{{ item.password }}"
  when: (item.enabled | default('yes')) == 'yes' and item.password is defined

- set_fact:
    user_password: "{{ lookup('password', '~/credentials/local/' + custom_hostname + '/' + item.name + ' chars=ascii_letters,digits,punctuation length=12') }}"
  when: (item.enabled | default('yes')) == 'no' and item.password is not defined

- win_user:
    # Keep backward compatibility with deprecated syntax
    name: "{{ item.value | default(item.name) }}"
    password: "{{ user_password }}"
    password_never_expires: "{{ item.password_never_expires | default('yes') }}"
    fullname: "{{ item.full_name | default('') }}"
    state: present
    account_disabled: "{{ 'yes' if ((item.enabled | default('yes')) == 'no') else 'no' }}"
    groups: Users